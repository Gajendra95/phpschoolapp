# expose a pod on moe-mysql-svc.default.svc.cluster.local to the rest of the cluster
apiVersion: v1
kind: Service
metadata:
  name: moe-mysql-svc
  namespace: default
  labels:
    "moe-php-mysql/example": lamp
spec:
  type: ClusterIP
  ports:
  # make the service available on this port within the cluster
  - port: 3306
    protocol: TCP
  # apply this service to the pod with the label app: mysql
  selector:
    app: moe-mysql

---

# deploy the MySQL server container
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moe-mysql-deployment
  namespace: default
  labels:
    "ak-php-mysql/example": lamp
spec:
  selector:
    matchLabels:
      app: moe-mysql
  replicas: 1
  selector:
    matchLabels:
      app: moe-mysql
  template:
    metadata:
      labels:
        app: moe-mysql
    spec:
      containers:
      - image: mysql:5.7
        name: moe-mysql
        env:
          - name: MYSQL_ROOT_PASSWORD
            value: rootpassword
          - name: MYSQL_USER
            value: moeuser
          - name: MYSQL_PASSWORD
            value: moepass
          - name: MYSQL_DATABASE
            value: moe_db
        # https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
        livenessProbe:
          tcpSocket:
            port: 3306
        ports:
        - containerPort: 3306
        # attach our persistent disk
        volumeMounts:
        - name: mysql-database
          mountPath: /var/lib/mysql
          #subPath: data
      # our spec requires a volume
      volumes:
      # the name assigned here is referenced by the container in volumeMounts: name
      - name: mysql-database
        persistentVolumeClaim:
          claimName: ak-pv-volume
